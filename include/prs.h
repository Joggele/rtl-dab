/*
This file is part of rtl-dab
rtl-dab is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

rtl-dab is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with rtl-dab.  If not, see <http://www.gnu.org/licenses/>.


JÃ¶rg Siegler 2017   dev dot js at web dot de
  - Computed according to ch. 14.3.2 of ETSI EN 300 401

*/

#include <assert.h>
#include <complex.h>
#include <fftw3.h>

/**
 * The phase reference symbol is defined in ch. 14.3.2 of ETSI EN 300 401.
 * It has K=1536 carriers with value +1, +i, -1, -i.
 * The positive carriers K=1..768 are stored in prs_static[0..767].
 * The negative carriers K=-768..-1 are stored in prs_static[768..1535].
 * The center carrier k=0 is zero and not stored in prs_static.
 *
 *               pos channels neg channels
 *              |0###########|############|
 *               0    K/2+1        K/2   K
 *
 *  channel     -7 -6 -5 -4 -3 -2 -1  0  1  2  3  4  5  6  7
 *  prs_ref      i  1 -i  1 -i  i  1  0 -i  i -i -i -i -i  1
 */
const fftwf_complex prs_ref[2048] = {
// center carrier k = 0 is zero
   0,
// positive carriers k = 1 .. 767
     -I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1,
   1,-I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1,
   1, I,-1,-I,-1, I, 1, 1,-I,-I, 1,-I,-1,-I,-1, 1,
  -I, I,-1,-I,-1, I, 1, 1,-I,-I, 1,-I,-1,-I,-1, 1,
  -I, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1,-1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,
  -I,-1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,
  -I,-1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I,
   1,-1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, 1,-I,-1,-I, 1, I,-I, 1,-1, I,-1,-I,-1,-I,-I,
   1, 1,-I,-1,-I, 1, I,-I, 1,-1, I,-1,-I,-1,-I,-I,
   1,-1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,
  -I,-1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,
  -I,-1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I,
   1,-1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I,
   1,-I,-I,-I, I,-I, I, 1,-1, I, I,-I, I, I,-I, 1,
  -1,-I,-I,-I, I,-I, I, 1,-1, I, I,-I, I, I,-I, 1,
  -1,-I,-1, I,-1,-I, 1,-1,-I, I, 1, I,-1, I,-1,-1,
  -I,-I,-1, I,-1,-I, 1,-1,-I, I, 1, I,-1, I,-1,-1,
  -I, 1,-1, 1, 1, 1, 1, I, I,-1, 1, 1, 1,-1,-1, I,
   I, 1,-1, 1, 1, 1, 1, I, I,-1, 1, 1, 1,-1,-1, I,
   I,-1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I,
   1,-1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1,-I,-1, I,-1,-I, 1,-1,-I, I, 1, I,-1, I,-1,-1,
  -I,-I,-1, I,-1,-I, 1,-1,-I, I, 1, I,-1, I,-1,-1,
  -I,-I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1,
   1,-I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1,
   1,-I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1,
   I,-I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1,
   I,-I,-I,-I, I,-I, I, 1,-1, I, I,-I, I, I,-I, 1,
  -1,-I,-I,-I, I,-I, I, 1,-1, I, I,-I, I, I,-I, 1,
  -1, 1,-I,-1,-I, 1, I,-I, 1,-1, I,-1,-I,-1,-I,-I,
   1, 1,-I,-1,-I, 1, I,-I, 1,-1, I,-1,-I,-1,-I,-I,
   1,-I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1,
   1,-I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1,
   1, 1, I,-1, I, 1,-I,-I,-1,-1,-I,-1, I,-1, I,-I,
  -1, 1, I,-1, I, 1,-I,-I,-1,-1,-I,-1, I,-1, I,-I,
  -1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1,
   1, I, 1,-I, 1, I,-1, 1, I,-I,-1,-I, 1,-I, 1, 1,
   I, I, 1,-I, 1, I,-1, 1, I,-I,-1,-I, 1,-I, 1, 1,
// carrier k = 768
   I,
// positive carriers k = 769 .. 1023 are all zero
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// negative carriers k = -1024 .. -769 are all zero
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// negative carriers k = -768 .. -1
   I,-I, I, I, I, I,-1,-1,-I, I, I, I,-I,-I,-1,-1,
   I,-I, I, I, I, I,-1,-1,-I, I, I, I,-I,-I,-1,-1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
   1, 1, 1,-1, 1,-1, I,-I,-1,-1, 1,-1,-1, 1, I,-I,
   1, 1, 1,-1, 1,-1, I,-I,-1,-1, 1,-1,-1, 1, I,-I,
   I,-1,-I,-1, I, 1, 1,-I,-I, 1,-I,-1,-I,-1, 1,-I,
   I,-1,-I,-1, I, 1, 1,-I,-I, 1,-I,-1,-I,-1, 1,-I,
  -I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1, 1,
  -I, I,-I,-I,-I,-I, 1, 1, I,-I,-I,-I, I, I, 1, 1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -1,-1,-1, 1,-1, 1,-I, I, 1, 1,-1, 1, 1,-1,-I, I,
  -1,-1,-1, 1,-1, 1,-I, I, 1, 1,-1, 1, 1,-1,-I, I,
  -I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1, I,
  -I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1, I,
  -1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,-I,
  -1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,-I,
   I, 1,-I, 1, I,-1, 1, I,-I,-1,-I, 1,-I, 1, 1, I,
   I, 1,-I, 1, I,-1, 1, I,-I,-1,-I, 1,-I, 1, 1, I,
  -1,-1,-1, 1,-1, 1,-I, I, 1, 1,-1, 1, 1,-1,-I, I,
  -1,-1,-1, 1,-1, 1,-I, I, 1, 1,-1, 1, 1,-1,-I, I,
  -I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1, I,
  -I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1, I,
   I,-I, I, I, I, I,-1,-1,-I, I, I, I,-I,-I,-1,-1,
   I,-I, I, I, I, I,-1,-1,-I, I, I, I,-I,-I,-1,-1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -I,-I,-I, I,-I, I, 1,-1, I, I,-I, I, I,-I, 1,-1,
  -I,-I,-I, I,-I, I, 1,-1, I, I,-I, I, I,-I, 1,-1,
  -I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1, I,
  -I, 1, I, 1,-I,-1,-1, I, I,-1, I, 1, I, 1,-1, I,
  -1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,-I,
  -1, 1,-1,-1,-1,-1,-I,-I, 1,-1,-1,-1, 1, 1,-I,-I,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -1, I, 1, I,-1,-I, I,-1, 1,-I, 1, I, 1, I, I,-1,
  -1,-1,-1, 1,-1, 1,-I, I, 1, 1,-1, 1, 1,-1,-I, I,
  -1,-1,-1, 1,-1, 1,-I, I, 1, 1,-1, 1, 1,-1,-I, I,
   I,-1,-I,-1, I, 1, 1,-I,-I, 1,-I,-1,-I,-1, 1,-I,
   I,-1,-I,-1, I, 1, 1,-I,-I, 1,-I,-1,-I,-1, 1,-I,
   I,-I, I, I, I, I,-1,-1,-I, I, I, I,-I,-I,-1,-1,
   I,-I, I, I, I, I,-1,-1,-I, I, I, I,-I,-I,-1,-1,
  -I,-1, I,-1,-I, 1,-1,-I, I, 1, I,-1, I,-1,-1,-I,
  -I,-1, I,-1,-I, 1,-1,-I, I, 1, I,-1, I,-1,-1,-I,
   I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1, 1,
   I, I, I,-I, I,-I,-1, 1,-I,-I, I,-I,-I, I,-1, 1,
  -1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I, 1,
  -1,-I, 1,-I,-1, I, I, 1, 1, I, 1,-I, 1,-I, I, 1};
